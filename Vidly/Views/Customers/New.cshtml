@model Vidly.ViewModels.NewCustomerViewModel
@{
    /**/

    ViewBag.Title = "New";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>New Customer</h2>

@*Html.BeginForm -its rending begining <form> ans the end of the using blog the object return Html.BeginForm will be dispose
    and in dispose it will be equal </form>*@
@using (Html.BeginForm("Create", "Customers"))
{
    <div class="form-group">
        @Html.LabelFor(m => m.Customer.Name)
        @*when razer view enging rending this view. it loock name prop and use this as the value for html label*@

        @Html.TextBoxFor(m => m.Customer.Name, new { @class = "form-control" })
    </div>
    <div class="form-group">
        @*<label for="Birthdate">Date of Birth</label>
            *forfocus behviour <label for*@
        @Html.LabelFor(m => m.Customer.Birthdate)
        @Html.TextBoxFor(m => m.Customer.Birthdate, new { @class = "form-control" })
    </div>

    @*<div class="form-group">
            @Html.LabelFor(m => m.IsSubscribedToNewsLetter)

            @Html.CheckBoxFor(m => m.IsSubscribedToNewsLetter, new { @class = "form-control" })
        </div>*@


    @*from getbootstrap.com (form)*@
    <div class="checkbox">
        <label>
            @*<input type="checkbox"> Check me out - two ways with similar*@
            @Html.CheckBoxFor(m => m.Customer.IsSubscribedToNewsLetter) Subscribed to NewsLetter?
        </label>
    </div>

    <div class="form-group">
        @*<label for="Birthdate">Date of Birth</label>
            *forfocus behviour <label for*@
        @Html.LabelFor(m => m.Customer.MembershipTypeId)
        @Html.DropDownListFor(m => m.Customer.MembershipTypeId, new SelectList(Model.MembershipTypes, "Id", "Name"), "Select Membership Type", new { @class = "form-control" })
        @*new SelectList - suply a list items for dropdown list(list imem, specify a name of the prop in membersh class, prop that hols a text), "Empty string" or  *@
    </div>
    <button type="submit" class="btn btn-primary">Save</button>
    @*btn - required for all buttons, btn-primary - represent a primary action use that view *@
}

